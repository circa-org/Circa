version: '3.8'

services:
# ===========================================================

  builder:
    build: ./services/op/builder
    environment:
      PRIVATE_KEY_DEPLOYER: ${PRIVATE_KEY}
      PRIVATE_KEY_SEQUENCER: ${PRIVATE_KEY}
      PRIVATE_KEY: ${PRIVATE_KEY}
      ADMIN_ADDRESS: ${PUBLIC_ADDRESS}
      SEQUENCER_ADDRESS: ${PUBLIC_ADDRESS}
      BATCHER_ADDRESS: ${PUBLIC_ADDRESS}
      PROPOSER_ADDRESS: ${PUBLIC_ADDRESS}
      L1_RPC: ${L1_RPC}
      L1_CHAIN_ID: ${L1_CHAIN_ID}
      ETH_RPC_URL: ${L1_RPC}
      L1STARTINGBLOCKTAG: ${L1STARTINGBLOCKTAG}
      L2_OUTPUT_ORACLE_TIMESTAMP: ${L2_OUTPUT_ORACLE_TIMESTAMP}
      DEPLOYMENT_CONTEXT: ${DEPLOYMENT_CONTEXT}
      L2_BLOCKTIME: ${L2_BLOCKTIME}
      L2_CHAIN_ID: ${L2_CHAIN_ID}
    volumes:
      - opstack-volume:/opstack/
    logging:
      driver: syslog
      options:
        syslog-address: "udp://localhost:59100"
        syslog-format: "rfc3164"
        tag: "builderlogs"

  opgeth:
    build: ./services/op/opgeth
    environment:
      SEQUENCER_ADDRESS: ${PUBLIC_ADDRESS}
      L2_CHAIN_ID: ${L2_CHAIN_ID}
    volumes:
      - opstack-volume:/opstack/
    depends_on:
      - builder
    restart:
      always
    ports:
      - 8551:8551
  
  opnode:
    build: ./services/op/opnode
    environment:
      PRIVATE_KEY_SEQUENCER: ${PRIVATE_KEY}
      L1_RPC: ${L1_RPC}
      RPC_KIND: ${RPC_KIND}
    volumes:
      - opstack-volume:/opstack/
    depends_on:
      - builder
    restart: always
    ports:
      - 8547:8547
  
  opbatcher:
    build: ./services/op/opbatcher
    environment:
      BATCHER_KEY: ${PRIVATE_KEY}
      L1_RPC: ${L1_RPC}
    volumes:
      - opstack-volume:/opstack/
    depends_on:
      - builder
    restart: always
    ports:
      - 8560:8560
  
  op-proposer:
    build: ./services/op/opproposer
    environment:
      PROPOSER_KEY: ${PRIVATE_KEY}
      L1_RPC: ${L1_RPC}
    volumes:
      - opstack-volume:/opstack/
    depends_on:
      - builder
    restart: always

# ===========================================================

  redis_db:
    extends:
      file: ./services/docker-compose-redis.yml
      service: redis_db

  db:
    extends:
      file: ./services/docker-compose-db.yml
      service: db

  blockscout:
    depends_on:
      - db
      - smart-contract-verifier
      - redis_db
    #image: blockscout/blockscout-optimism:latest
    image: blockscout/blockscout:${DOCKER_TAG:-latest}
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    container_name: 'blockscout'
    links:
      - db:database
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  ./envs/common-blockscout.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://opgeth:8545
        DATABASE_URL: postgresql://postgres:@host.docker.internal:7432/blockscout?ssl=false
        ECTO_USE_SSL: 'false'
        SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
    ports:
      - 4000:4000
    volumes:
      - ./logs/:/app/logs/

  smart-contract-verifier:
    extends:
      file: ./services/docker-compose-smart-contract-verifier.yml
      service: smart-contract-verifier

  visualizer:
    extends:
      file: ./services/docker-compose-visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/docker-compose-sig-provider.yml
      service: sig-provider

# ===========================================================

volumes:
  opstack-volume:

networks:
  shared_network: